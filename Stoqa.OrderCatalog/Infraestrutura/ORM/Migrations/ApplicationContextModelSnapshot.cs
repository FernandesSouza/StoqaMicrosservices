// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stoqa.Infra.ORM.Context;

#nullable disable

namespace Stoqa.OrderCatalog.Infraestrutura.ORM.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Orders", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Order", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Product", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.ProductOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id")
                        .HasColumnOrder(2);

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("ProductOrder", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Return", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit")
                        .HasColumnName("approved")
                        .HasColumnOrder(3);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasColumnOrder(5);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description")
                        .HasColumnOrder(2);

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("orderId")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Return", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Sale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Invoice")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("invoice")
                        .HasColumnOrder(2);

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("orderId")
                        .HasColumnOrder(5);

                    b.Property<bool>("Shipping")
                        .HasColumnType("bit")
                        .HasColumnName("shipping")
                        .HasColumnOrder(4);

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("value")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Sale", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Transport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("freight")
                        .HasColumnOrder(3);

                    b.Property<decimal>("StandardQuote")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("standardQuote")
                        .HasColumnOrder(5);

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("trackingCode")
                        .HasColumnOrder(4);

                    b.Property<byte>("TransportType")
                        .HasColumnType("tinyint")
                        .HasColumnName("transportType")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Transport", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Product", b =>
                {
                    b.HasOne("Stoqa.OrderCatalog.Domain.Entities.ProductOrder", null)
                        .WithOne("Product")
                        .HasForeignKey("Stoqa.OrderCatalog.Domain.Entities.Product", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.ProductOrder", b =>
                {
                    b.HasOne("Stoqa.OrderCatalog.Domain.Entities.Orders", null)
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Return", b =>
                {
                    b.HasOne("Stoqa.OrderCatalog.Domain.Entities.Orders", null)
                        .WithOne("Return")
                        .HasForeignKey("Stoqa.OrderCatalog.Domain.Entities.Return", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stoqa.OrderCatalog.Domain.Entities.Transport", "Transport")
                        .WithOne()
                        .HasForeignKey("Stoqa.OrderCatalog.Domain.Entities.Return", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Sale", b =>
                {
                    b.HasOne("Stoqa.OrderCatalog.Domain.Entities.Orders", null)
                        .WithOne("Sale")
                        .HasForeignKey("Stoqa.OrderCatalog.Domain.Entities.Sale", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stoqa.OrderCatalog.Domain.Entities.Transport", "Transport")
                        .WithOne()
                        .HasForeignKey("Stoqa.OrderCatalog.Domain.Entities.Sale", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.Orders", b =>
                {
                    b.Navigation("ProductOrders");

                    b.Navigation("Return");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("Stoqa.OrderCatalog.Domain.Entities.ProductOrder", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
