// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stoqa.Managment.Infraestrutura.ORM.Context;

#nullable disable

namespace Stoqa.Managment.Infraestrutura.ORM.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stoqa.Managment.Domain.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("city")
                        .HasColumnOrder(4);

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("complement")
                        .HasColumnOrder(6);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("country")
                        .HasColumnOrder(9);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("district")
                        .HasColumnOrder(3);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("number")
                        .HasColumnOrder(5);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("state")
                        .HasColumnOrder(7);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("street")
                        .HasColumnOrder(2);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("zipCode")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.ToTable("Address", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.Managment.Domain.Entities.Collaborator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasColumnOrder(7);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("document")
                        .HasColumnOrder(4);

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint")
                        .HasColumnName("gender")
                        .HasColumnOrder(6);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("password")
                        .HasColumnOrder(3);

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint")
                        .HasColumnName("role")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Collaborator", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.Managment.Domain.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint")
                        .HasColumnName("address_id")
                        .HasColumnOrder(6);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasColumnOrder(4);

                    b.Property<byte>("CustomerType")
                        .HasColumnType("tinyint")
                        .HasColumnName("customerType")
                        .HasColumnOrder(5);

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("document")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Customer", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.Managment.Domain.Entities.Collaborator", b =>
                {
                    b.HasOne("Stoqa.Managment.Domain.Entities.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Stoqa.Managment.Domain.Entities.Collaborator", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Stoqa.Managment.Domain.Entities.Customer", b =>
                {
                    b.HasOne("Stoqa.Managment.Domain.Entities.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Stoqa.Managment.Domain.Entities.Customer", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
