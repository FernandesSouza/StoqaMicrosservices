services:
  stoqa.useraccess:
    image: stoqa.useraccess 
    build:
      context: .
      dockerfile: Stoqa.UserAccess/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - postgre
  
  stoqa.ordercatalog:
    image: stoqa.ordercatalog
    build:
      context: .
      dockerfile: Stoqa.OrderCatalog/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - sqlserver
      - rabbitmq
  
  stoqa.productcatalog:
    image: stoqa.productcatalog
    build:
      context: .
      dockerfile: Stoqa.ProductCatalog/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "7000:7000"
      - "7001:7001"
    depends_on:
      - sqlserver
      - rabbitmq
  
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "ComposeSql@2025"
      ACCEPT_EULA: "Y"
  
  postgre:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "ComposePostgre@2025"
      POSTGRES_DB: "StoqaUserAccess"
  
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEPRECATED_FEATURES_PERMIT_MANAGEMENT_METRICS_COLLECTION: "false"
      DEPRECATED_FEATURES_PERMIT_TRANSIENT_NONEXCL_QUEUES: "false"
      DEPRECATED_FEATURES_PERMIT_GLOBAL_QOS: "false"
        

