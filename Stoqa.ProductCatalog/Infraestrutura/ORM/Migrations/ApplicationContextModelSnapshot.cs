// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stoqa.ProductCatalog.Infraestrutura.ORM.Context;

#nullable disable

namespace Stoqa.ProductCatalog.Infraestrutura.ORM.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.Deposit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasColumnOrder(4);

                    b.Property<string>("DepositName")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("product_id")
                        .HasColumnOrder(2);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("identifier")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Deposit", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.PackagingComposition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level")
                        .HasColumnOrder(1);

                    b.Property<byte>("Packing")
                        .HasColumnType("tinyint")
                        .HasColumnName("packing")
                        .HasColumnOrder(4);

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("productId")
                        .HasColumnOrder(3);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PackagingComposition", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasColumnOrder(6);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate")
                        .HasColumnOrder(7);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("Product", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.StockItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DepositId")
                        .HasColumnType("bigint")
                        .HasColumnName("deposit_id")
                        .HasColumnOrder(4);

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasColumnOrder(2);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("DepositId");

                    b.HasIndex("ProductId");

                    b.ToTable("StockItem", "Stoqa");
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.PackagingComposition", b =>
                {
                    b.HasOne("Stoqa.ProductCatalog.Domain.Entities.Product", null)
                        .WithMany("PackingCompositions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.StockItem", b =>
                {
                    b.HasOne("Stoqa.ProductCatalog.Domain.Entities.Deposit", "Deposit")
                        .WithMany("StockItems")
                        .HasForeignKey("DepositId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stoqa.ProductCatalog.Domain.Entities.Product", "Product")
                        .WithMany("StockItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposit");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.Deposit", b =>
                {
                    b.Navigation("StockItems");
                });

            modelBuilder.Entity("Stoqa.ProductCatalog.Domain.Entities.Product", b =>
                {
                    b.Navigation("PackingCompositions");

                    b.Navigation("StockItems");
                });
#pragma warning restore 612, 618
        }
    }
}
